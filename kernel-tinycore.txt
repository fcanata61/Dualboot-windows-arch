###############################################################################
# Gentoo Kernel Extremo + Hardened + Tinyconfig Otimizado
# Autor: Gerado por ChatGPT
# Objetivo: Kernel ultra enxuto, seguro e funcional com mínimo de módulos
###############################################################################

#############################
# 1. Preparar ambiente
#############################
# Atualizar Portage e sistema
sudo emerge --sync
sudo emerge --ask --update --deep --newuse @world

# Instalar pacotes essenciais para kernel e ferramentas de configuração
sudo emerge sys-kernel/gentoo-sources sys-kernel/hardened-sources sys-kernel/genkernel sys-kernel/linux-firmware
sudo emerge app-editors/nano sys-kernel/kconfig-frontends

#############################
# 2. Entrar no diretório do kernel
#############################
cd /usr/src/linux

#############################
# 3. Gerar configuração mínima
#############################
# Tinyconfig: base quase zero
make tinyconfig

#############################
# 4. Configuração mínima funcional (pré-selecionada)
#############################
# Usar menuconfig para ativar módulos essenciais
sudo make menuconfig

# Módulos mínimos para boot seguro:
# Processor type and features:
#   - CPU específico (-march=native)
#   - APIC, SMP, timers
# File systems:
#   - EXT4 (raiz)
#   - VFAT (boot)
#   - Swap
# Device Drivers:
#   - SATA/AHCI/NVMe
#   - IDE (se necessário)
#   - SCSI básico
# Console:
#   - VGA/Framebuffer
# Networking:
#   - Ethernet (obrigatório para rede)
#   - Wi-Fi opcional
# Initramfs:
#   - Habilitar se usar RAID/LVM ou criptografia
# Sound (desktop):
#   - ALSA e PulseAudio mínimo
# Graphics (desktop GUI):
#   - Drivers da placa de vídeo essencial
# Hardened options:
#   - SELinux/AppArmor/Stackprotector se desejado (opcional)

#############################
# 5. Aplicar patches e otimizações Gentoo
#############################
# gentoo-sources já contém patches Gentoo
# hardened-sources adiciona segurança extra e otimizações
# USE="hardened" em make.conf habilita recursos Hardened adicionais

#############################
# 6. Compilar kernel e módulos
#############################
# Compilação paralela com todos os núcleos
sudo make -j$(nproc)
sudo make modules_install

# Instalar kernel
sudo make install

#############################
# 7. Criar/initramfs (se necessário)
#############################
# Para RAID, LVM, criptografia ou módulos especiais
sudo genkernel --install initramfs

#############################
# 8. Atualizar bootloader (GRUB)
#############################
sudo grub-mkconfig -o /boot/grub/grub.cfg

# Verificar se o kernel aparece na lista
grep "menuentry" /boot/grub/grub.cfg

#############################
# 9. Reiniciar e testar
#############################
sudo reboot

# Após boot, verificar kernel
uname -r

#############################
# 10. Otimizações finais
#############################
# Ajuste CFLAGS em /etc/portage/make.conf:
# CFLAGS="-O3 -march=native -pipe -fomit-frame-pointer"
# Para desktop enxuto, habilite apenas ALSA/Pulse e drivers gráficos
# Para servidor, mantenha somente rede, disco e CPU
# Desabilite módulos não usados em /etc/modprobe.d/blacklist.conf
# USE="ccache distcc" acelera recompilações

# Tinyconfig + Hardened + otimizações Gentoo
# Resultado: kernel ultra enxuto, seguro e funcional, compilando rapidamente

###############################################################################
# Fim do Tutorial Avançado: Kernel Extremo Gentoo + Hardened + Tinyconfig
###############################################################################
