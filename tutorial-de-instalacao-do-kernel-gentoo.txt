###############################################################################
# Tutorial Gentoo - Instalação e Configuração do Kernel com Otimizações Gentoo
# Autor: Gerado por ChatGPT
# Objetivo: Kernel enxuto, otimizado para desempenho e segurança
###############################################################################

#############################
# 1. Preparar o ambiente
#############################
# Certifique-se de que o Portage está atualizado
sudo emerge --sync
sudo emerge --ask --update --deep --newuse @world

# Instale pacotes necessários para compilar o kernel
sudo emerge sys-kernel/gentoo-sources sys-kernel/genkernel sys-kernel/linux-firmware

# Opcional: para otimizações de segurança/hardening
sudo emerge sys-kernel/hardened-sources

# Instale ferramentas úteis de compilação e configuração
sudo emerge app-editors/nano sys-kernel/kconfig-frontends

#############################
# 2. Escolher a fonte do kernel
#############################
# Gentoo recomenda:
# - sys-kernel/gentoo-sources: kernel vanilla com patches Gentoo
# - sys-kernel/hardened-sources: kernel com segurança e otimizações
# Escolha apenas uma:
# Para máximo desempenho e estabilidade:
sudo emerge sys-kernel/gentoo-sources

#############################
# 3. Configurar o Kernel
#############################
# Entre no diretório do kernel
cd /usr/src/linux

# Copiar configuração base do Gentoo (opcional)
zcat /proc/config.gz > .config

# Ou usar configuração anterior
# cp /boot/config-$(uname -r) .config

# Configuração interativa
# menuconfig permite escolher módulos e otimizações
sudo make menuconfig

# Dicas de configuração:
# 1. Desabilite módulos que você não usa (IDE, SCSI extras, drivers antigos)
# 2. Em Processor type and features:
#    - Habilite seu CPU específico (-march=native)
#    - Ative SSE, AVX, etc. se disponível
# 3. File systems: habilite apenas os que você usa (ext4, vfat, btrfs)
# 4. Device Drivers: desabilite hardware que não possui
# 5. Networking: habilite apenas protocolos que precisa
# 6. Kernel hacking: desabilite debug se quiser desempenho máximo

#############################
# 4. Aplicar patches de otimização do Gentoo
#############################
# Gentoo já aplica alguns patches por padrão no gentoo-sources
# Para Hardened ou otimizações extras:
# 1. USE="hardened" em make.conf
# 2. sys-kernel/hardened-sources aplica patches de segurança
# 3. sys-kernel/gentoo-sources já contém patches Gentoo para desempenho

#############################
# 5. Compilar o Kernel
#############################
# Compile o kernel com otimizações de CPU e paralelismo
sudo make -j$(nproc) && sudo make modules_install

# Instalar kernel
sudo make install

# Isso instala o kernel em /boot e gera initramfs se necessário

#############################
# 6. Atualizar bootloader (GRUB)
#############################
# Detecta novo kernel e atualiza GRUB
sudo grub-mkconfig -o /boot/grub/grub.cfg

# Certifique-se que o novo kernel está listado
grep "menuentry" /boot/grub/grub.cfg

#############################
# 7. Reiniciar e testar
#############################
# Reinicie o sistema e selecione o novo kernel no GRUB
sudo reboot

# Após reinício, verifique versão do kernel
uname -r

#############################
# 8. Otimizações finais (opcional)
#############################
# - Ajuste CFLAGS em /etc/portage/make.conf para combinar com o kernel
# - Ative apenas os módulos necessários
# - Use genkernel para initramfs se usar RAID/LVM ou initramfs personalizado
# - Para desktops enxutos, desabilite drivers de som e vídeo que não usa
# - Para servidores, desabilite X e drivers gráficos

###############################################################################
# Fim do Tutorial do Kernel Gentoo
###############################################################################
